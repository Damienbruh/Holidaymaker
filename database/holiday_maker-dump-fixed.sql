--
-- PostgreSQL database dump
--

-- Dumped from database version 16.4
-- Dumped by pg_dump version 16.4

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

ALTER TABLE IF EXISTS ONLY public.rooms DROP CONSTRAINT IF EXISTS rooms_hotels_hotel_id_fk;
ALTER TABLE IF EXISTS ONLY public.hotels_join_features DROP CONSTRAINT IF EXISTS hotels_join_features_hotels_hotel_id_fk;
ALTER TABLE IF EXISTS ONLY public.hotels_join_features DROP CONSTRAINT IF EXISTS hotels_join_features_hotel_features_hotel_features_id_fk;
ALTER TABLE IF EXISTS ONLY public.bookings_join_rooms DROP CONSTRAINT IF EXISTS bookings_join_rooms_rooms_room_id_fk;
ALTER TABLE IF EXISTS ONLY public.bookings_join_rooms DROP CONSTRAINT IF EXISTS bookings_join_rooms_bookings_bookings_id_fk;
ALTER TABLE IF EXISTS ONLY public.bookings_join_customer DROP CONSTRAINT IF EXISTS bookings_join_customer_customers_customer_id_fk;
ALTER TABLE IF EXISTS ONLY public.bookings_join_customer DROP CONSTRAINT IF EXISTS bookings_join_customer_bookings_bookings_id_fk;
ALTER TABLE IF EXISTS ONLY public.bookings_join_addons DROP CONSTRAINT IF EXISTS bookings_join_addons_bookings_bookings_id_fk;
ALTER TABLE IF EXISTS ONLY public.bookings_join_addons DROP CONSTRAINT IF EXISTS bookings_join_addons_addons_addons_id_fk;
ALTER TABLE IF EXISTS ONLY public.addons_join_hotels DROP CONSTRAINT IF EXISTS addons_join_hotels_hotels_hotel_id_fk;
ALTER TABLE IF EXISTS ONLY public.addons_join_hotels DROP CONSTRAINT IF EXISTS addons_join_hotels_addons_addons_id_fk;
ALTER TABLE IF EXISTS ONLY public.rooms DROP CONSTRAINT IF EXISTS rooms_pk;
ALTER TABLE IF EXISTS ONLY public.hotels DROP CONSTRAINT IF EXISTS hotels_pk;
ALTER TABLE IF EXISTS ONLY public.hotels_join_features DROP CONSTRAINT IF EXISTS hotels_join_features_pk;
ALTER TABLE IF EXISTS ONLY public.hotel_features DROP CONSTRAINT IF EXISTS hotel_features_pk;
ALTER TABLE IF EXISTS ONLY public.customers DROP CONSTRAINT IF EXISTS customers_pk;
ALTER TABLE IF EXISTS ONLY public.bookings DROP CONSTRAINT IF EXISTS bookings_pk;
ALTER TABLE IF EXISTS ONLY public.bookings_join_rooms DROP CONSTRAINT IF EXISTS bookings_join_rooms_pk;
ALTER TABLE IF EXISTS ONLY public.bookings_join_customer DROP CONSTRAINT IF EXISTS bookings_join_customer_pk;
ALTER TABLE IF EXISTS ONLY public.bookings_join_addons DROP CONSTRAINT IF EXISTS bookings_join_addons_pk;
ALTER TABLE IF EXISTS ONLY public.addons DROP CONSTRAINT IF EXISTS addons_pk;
ALTER TABLE IF EXISTS ONLY public.addons_join_hotels DROP CONSTRAINT IF EXISTS addons_join_hotels_pk;
DROP VIEW IF EXISTS public.feature_and_hotel_view;
DROP TABLE IF EXISTS public.hotels_join_features;
DROP TABLE IF EXISTS public.hotel_features;
DROP VIEW IF EXISTS public.booking_view;
DROP TABLE IF EXISTS public.customers;
DROP TABLE IF EXISTS public.bookings_join_customer;
DROP TABLE IF EXISTS public.bookings_join_addons;
DROP VIEW IF EXISTS public.booking_to_hotels_view;
DROP TABLE IF EXISTS public.rooms;
DROP TABLE IF EXISTS public.hotels;
DROP TABLE IF EXISTS public.bookings_join_rooms;
DROP TABLE IF EXISTS public.bookings;
DROP TABLE IF EXISTS public.admins;
DROP TABLE IF EXISTS public.addons_join_hotels;
DROP TABLE IF EXISTS public.addons;
DROP FUNCTION IF EXISTS public.verify_login(input_username text, input_password text);
-- *not* dropping schema, since initdb creates it
--
-- Name: public; Type: SCHEMA; Schema: -; Owner: postgres
--

-- *not* creating schema, since initdb creates it


ALTER SCHEMA public OWNER TO postgres;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON SCHEMA public IS '';


--
-- Name: verify_login(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.verify_login(input_username text, input_password text) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
begin
    return exists
        (select 1 from admins where admins.username = input_username and admins.password = input_password);
end
$$;


ALTER FUNCTION public.verify_login(input_username text, input_password text) OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: addons; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.addons (
    addons_id integer NOT NULL,
    addon text NOT NULL,
    addon_price integer NOT NULL
);


ALTER TABLE public.addons OWNER TO postgres;

--
-- Name: addons_addons_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.addons ALTER COLUMN addons_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.addons_addons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: addons_join_hotels; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.addons_join_hotels (
    addon_fk integer NOT NULL,
    hotel_fk integer NOT NULL
);


ALTER TABLE public.addons_join_hotels OWNER TO postgres;

--
-- Name: admins; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.admins (
    id integer NOT NULL,
    username text,
    password text
);


ALTER TABLE public.admins OWNER TO postgres;

--
-- Name: admins_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.admins ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.admins_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: bookings; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.bookings (
    bookings_id integer NOT NULL,
    start_date timestamp without time zone,
    end_date timestamp without time zone,
    status text
);


ALTER TABLE public.bookings OWNER TO postgres;

--
-- Name: bookings_join_rooms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.bookings_join_rooms (
    rooms_fk integer NOT NULL,
    booking_fk integer NOT NULL
);


ALTER TABLE public.bookings_join_rooms OWNER TO postgres;

--
-- Name: hotels; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.hotels (
    hotel_id integer NOT NULL,
    street_name text,
    postal_code text,
    city text,
    region text,
    country text,
    distance_to_ski_slope text,
    distance_to_town_center text,
    rating integer,
    hotel_name text,
    distance_to_linus_house integer
);


ALTER TABLE public.hotels OWNER TO postgres;

--
-- Name: rooms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rooms (
    room_id integer NOT NULL,
    size text,
    price integer,
    hotel_fk integer,
    room_number integer
);


ALTER TABLE public.rooms OWNER TO postgres;

--
-- Name: booking_to_hotels_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.booking_to_hotels_view AS
 SELECT hotels.hotel_id,
    hotels.street_name,
    hotels.postal_code,
    hotels.city,
    hotels.region,
    hotels.country,
    hotels.distance_to_ski_slope,
    hotels.distance_to_town_center,
    hotels.rating,
    rooms.room_id,
    rooms.size,
    rooms.price,
    rooms.room_number,
    bookings.bookings_id,
    bookings.start_date,
    bookings.end_date,
    bookings.status
   FROM (((public.rooms
     LEFT JOIN public.hotels ON ((rooms.hotel_fk = hotels.hotel_id)))
     LEFT JOIN public.bookings_join_rooms ON ((rooms.room_id = bookings_join_rooms.rooms_fk)))
     LEFT JOIN public.bookings ON ((bookings_join_rooms.booking_fk = bookings.bookings_id)));


ALTER VIEW public.booking_to_hotels_view OWNER TO postgres;

--
-- Name: bookings_join_addons; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.bookings_join_addons (
    addon_fk integer NOT NULL,
    booking_fk integer NOT NULL
);


ALTER TABLE public.bookings_join_addons OWNER TO postgres;

--
-- Name: bookings_join_customer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.bookings_join_customer (
    customer_fk integer NOT NULL,
    booking_fk integer NOT NULL
);


ALTER TABLE public.bookings_join_customer OWNER TO postgres;

--
-- Name: customers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.customers (
    customer_id integer NOT NULL,
    name text,
    email text,
    phone_number text,
    birthyear integer
);


ALTER TABLE public.customers OWNER TO postgres;

--
-- Name: COLUMN customers.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.customers.name IS 'name';


--
-- Name: booking_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.booking_view AS
 SELECT bookings.bookings_id,
    bookings.start_date,
    bookings.end_date,
    bookings.status,
    addons.addons_id,
    addons.addon,
    addons.addon_price,
    rooms.room_id,
    rooms.size,
    rooms.price,
    rooms.room_number,
    customers.customer_id,
    customers.name,
    customers.email,
    customers.phone_number,
    customers.birthyear
   FROM ((((((public.bookings
     LEFT JOIN public.bookings_join_addons ON ((bookings.bookings_id = bookings_join_addons.booking_fk)))
     LEFT JOIN public.addons ON ((bookings_join_addons.addon_fk = addons.addons_id)))
     JOIN public.bookings_join_rooms ON ((bookings.bookings_id = bookings_join_rooms.booking_fk)))
     JOIN public.rooms ON ((bookings_join_rooms.rooms_fk = rooms.room_id)))
     JOIN public.bookings_join_customer ON ((bookings.bookings_id = bookings_join_customer.booking_fk)))
     JOIN public.customers ON ((bookings_join_customer.customer_fk = customers.customer_id)));


ALTER VIEW public.booking_view OWNER TO postgres;

--
-- Name: bookings_bookings_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.bookings ALTER COLUMN bookings_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.bookings_bookings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: customers_customer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.customers ALTER COLUMN customer_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.customers_customer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: hotel_features; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.hotel_features (
    hotel_features_id integer NOT NULL,
    feature text NOT NULL
);


ALTER TABLE public.hotel_features OWNER TO postgres;

--
-- Name: COLUMN hotel_features.feature; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.hotel_features.feature IS 'feature';


--
-- Name: hotels_join_features; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.hotels_join_features (
    feature_fk integer NOT NULL,
    hotel_fk integer NOT NULL
);


ALTER TABLE public.hotels_join_features OWNER TO postgres;

--
-- Name: feature_and_hotel_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.feature_and_hotel_view AS
 SELECT hotels.hotel_id,
    hotels.street_name,
    hotels.postal_code,
    hotels.city,
    hotels.region,
    hotels.country,
    hotels.distance_to_ski_slope,
    hotels.distance_to_town_center,
    hotels.rating,
    hotel_features.hotel_features_id,
    hotel_features.feature
   FROM ((public.hotels
     JOIN public.hotels_join_features ON ((hotels.hotel_id = hotels_join_features.hotel_fk)))
     JOIN public.hotel_features ON ((hotels_join_features.feature_fk = hotel_features.hotel_features_id)));


ALTER VIEW public.feature_and_hotel_view OWNER TO postgres;

--
-- Name: hotel_features_hotel_features_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.hotel_features ALTER COLUMN hotel_features_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.hotel_features_hotel_features_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: hotels_address_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.hotels ALTER COLUMN hotel_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.hotels_address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: rooms_room_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.rooms ALTER COLUMN room_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.rooms_room_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: addons; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.addons (addons_id, addon, addon_price) FROM stdin;
1	extra bed	25
2	half board	30
3	full board	70
\.


--
-- Data for Name: addons_join_hotels; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.addons_join_hotels (addon_fk, hotel_fk) FROM stdin;
3	1
2	1
1	2
3	3
1	3
1	4
1	5
3	5
1	6
2	6
3	6
1	7
3	7
1	8
3	9
1	9
2	9
1	10
2	10
3	10
1	11
3	11
2	11
1	12
3	12
2	12
1	13
2	14
3	14
1	14
2	15
1	15
2	16
3	16
2	17
3	18
1	18
2	19
3	19
2	20
3	20
2	21
3	21
1	21
1	22
2	22
3	22
3	23
1	24
2	25
1	25
\.


--
-- Data for Name: admins; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.admins (id, username, password) FROM stdin;
1	Admin	Password
\.


--
-- Data for Name: bookings; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.bookings (bookings_id, start_date, end_date, status) FROM stdin;
1	2023-12-27 00:00:00	2024-01-18 00:00:00	active
2	2024-05-12 00:00:00	2024-05-25 00:00:00	active
3	2023-07-05 00:00:00	2023-07-07 00:00:00	inactive
4	2024-01-15 00:00:00	2024-02-12 00:00:00	active
5	2024-06-28 00:00:00	2024-07-08 00:00:00	inactive
6	2024-08-22 00:00:00	2024-09-16 00:00:00	inactive
7	2022-12-30 00:00:00	2023-01-29 00:00:00	active
8	2024-08-07 00:00:00	2024-08-18 00:00:00	inactive
9	2022-12-13 00:00:00	2022-12-19 00:00:00	active
10	2024-04-04 00:00:00	2024-04-16 00:00:00	active
11	2024-06-20 00:00:00	2024-07-11 00:00:00	active
12	2023-11-17 00:00:00	2023-11-28 00:00:00	active
13	2023-09-02 00:00:00	2023-09-18 00:00:00	inactive
14	2023-10-05 00:00:00	2023-10-18 00:00:00	inactive
15	2023-02-16 00:00:00	2023-03-08 00:00:00	active
16	2024-08-08 00:00:00	2024-08-27 00:00:00	active
17	2023-03-12 00:00:00	2023-03-17 00:00:00	inactive
18	2023-08-13 00:00:00	2023-08-30 00:00:00	active
19	2023-10-18 00:00:00	2023-11-15 00:00:00	active
20	2024-06-14 00:00:00	2024-06-30 00:00:00	active
21	2024-08-20 00:00:00	2024-09-12 00:00:00	inactive
22	2023-04-26 00:00:00	2023-05-04 00:00:00	active
23	2024-04-07 00:00:00	2024-04-13 00:00:00	inactive
24	2024-11-22 00:00:00	2024-12-12 00:00:00	active
25	2024-06-06 00:00:00	2024-06-29 00:00:00	inactive
26	2023-08-27 00:00:00	2023-09-20 00:00:00	inactive
27	2023-05-23 00:00:00	2023-06-08 00:00:00	inactive
28	2024-02-02 00:00:00	2024-02-22 00:00:00	inactive
29	2023-03-23 00:00:00	2023-03-30 00:00:00	active
30	2024-06-01 00:00:00	2024-06-24 00:00:00	active
31	2024-07-10 00:00:00	2024-08-01 00:00:00	active
32	2023-11-21 00:00:00	2023-12-08 00:00:00	inactive
33	2024-01-02 00:00:00	2024-01-23 00:00:00	inactive
34	2023-09-21 00:00:00	2023-09-22 00:00:00	inactive
35	2023-04-06 00:00:00	2023-04-28 00:00:00	active
36	2024-07-18 00:00:00	2024-08-09 00:00:00	active
37	2024-03-01 00:00:00	2024-03-09 00:00:00	inactive
38	2023-08-25 00:00:00	2023-09-23 00:00:00	inactive
39	2024-01-13 00:00:00	2024-01-30 00:00:00	active
40	2023-01-27 00:00:00	2023-02-06 00:00:00	active
41	2023-08-17 00:00:00	2023-09-16 00:00:00	inactive
42	2023-11-15 00:00:00	2023-12-15 00:00:00	inactive
43	2024-10-30 00:00:00	2024-11-12 00:00:00	inactive
44	2023-10-23 00:00:00	2023-10-27 00:00:00	inactive
45	2024-07-27 00:00:00	2024-08-25 00:00:00	active
46	2024-04-08 00:00:00	2024-04-29 00:00:00	inactive
47	2024-04-22 00:00:00	2024-05-16 00:00:00	active
48	2023-09-18 00:00:00	2023-09-25 00:00:00	inactive
49	2023-03-29 00:00:00	2023-04-05 00:00:00	inactive
50	2023-06-18 00:00:00	2023-06-25 00:00:00	inactive
51	2024-09-02 00:00:00	2024-09-08 00:00:00	inactive
52	2023-03-16 00:00:00	2023-03-24 00:00:00	active
53	2024-02-19 00:00:00	2024-03-07 00:00:00	inactive
54	2023-12-02 00:00:00	2023-12-21 00:00:00	inactive
55	2023-10-24 00:00:00	2023-11-01 00:00:00	active
56	2024-02-04 00:00:00	2024-02-05 00:00:00	active
57	2024-04-21 00:00:00	2024-05-08 00:00:00	inactive
58	2024-08-12 00:00:00	2024-09-09 00:00:00	active
59	2024-11-24 00:00:00	2024-12-12 00:00:00	inactive
60	2023-11-02 00:00:00	2023-11-10 00:00:00	inactive
61	2022-12-20 00:00:00	2023-01-03 00:00:00	inactive
62	2023-12-14 00:00:00	2023-12-28 00:00:00	active
63	2024-11-24 00:00:00	2024-12-13 00:00:00	inactive
64	2024-05-24 00:00:00	2024-06-17 00:00:00	inactive
65	2023-09-04 00:00:00	2023-09-13 00:00:00	active
66	2024-03-19 00:00:00	2024-04-04 00:00:00	active
67	2024-07-23 00:00:00	2024-08-18 00:00:00	active
68	2024-08-14 00:00:00	2024-08-30 00:00:00	inactive
69	2024-12-03 00:00:00	2024-12-21 00:00:00	inactive
70	2024-01-13 00:00:00	2024-01-27 00:00:00	active
71	2023-08-01 00:00:00	2023-08-18 00:00:00	inactive
72	2024-01-19 00:00:00	2024-01-21 00:00:00	active
73	2023-04-25 00:00:00	2023-05-19 00:00:00	active
74	2022-12-15 00:00:00	2022-12-17 00:00:00	inactive
75	2023-01-26 00:00:00	2023-02-25 00:00:00	active
76	2023-01-06 00:00:00	2023-01-11 00:00:00	inactive
77	2023-04-09 00:00:00	2023-04-13 00:00:00	active
78	2024-01-12 00:00:00	2024-01-27 00:00:00	active
79	2023-07-28 00:00:00	2023-08-15 00:00:00	inactive
80	2023-01-13 00:00:00	2023-01-21 00:00:00	active
81	2023-10-06 00:00:00	2023-10-26 00:00:00	inactive
82	2022-12-27 00:00:00	2022-12-28 00:00:00	inactive
83	2023-07-24 00:00:00	2023-08-08 00:00:00	inactive
84	2023-01-11 00:00:00	2023-01-15 00:00:00	active
85	2024-11-27 00:00:00	2024-11-30 00:00:00	inactive
86	2024-08-18 00:00:00	2024-08-29 00:00:00	inactive
87	2023-05-14 00:00:00	2023-05-15 00:00:00	active
88	2024-09-03 00:00:00	2024-09-04 00:00:00	active
89	2024-03-08 00:00:00	2024-03-24 00:00:00	active
90	2024-03-20 00:00:00	2024-04-13 00:00:00	inactive
91	2023-05-03 00:00:00	2023-06-01 00:00:00	inactive
92	2022-12-05 00:00:00	2023-01-02 00:00:00	inactive
93	2023-01-16 00:00:00	2023-02-10 00:00:00	active
94	2024-12-02 00:00:00	2024-12-16 00:00:00	active
95	2024-03-14 00:00:00	2024-03-31 00:00:00	active
96	2024-01-31 00:00:00	2024-02-04 00:00:00	inactive
97	2024-04-16 00:00:00	2024-05-06 00:00:00	inactive
98	2023-10-21 00:00:00	2023-10-23 00:00:00	inactive
99	2024-03-31 00:00:00	2024-04-30 00:00:00	inactive
100	2024-08-15 00:00:00	2024-09-03 00:00:00	inactive
\.


--
-- Data for Name: bookings_join_addons; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.bookings_join_addons (addon_fk, booking_fk) FROM stdin;
3	1
1	2
3	2
2	3
1	3
2	4
3	4
2	5
3	5
1	5
2	6
1	6
3	6
3	7
1	7
2	7
1	8
3	8
1	9
3	10
3	11
1	11
2	11
3	12
2	13
1	13
2	14
1	14
3	14
2	15
3	15
1	16
3	16
2	16
1	17
3	17
2	17
3	18
1	18
2	18
3	19
2	19
3	20
1	20
2	20
1	21
3	21
2	21
2	22
2	23
1	23
3	23
3	24
2	24
1	24
2	25
2	26
1	26
3	26
3	27
2	27
1	27
1	28
2	28
1	29
1	30
3	30
2	31
3	31
3	32
2	32
1	33
2	34
3	34
1	34
1	35
3	35
2	35
3	36
1	36
3	37
2	37
1	37
3	38
3	39
2	40
3	41
1	42
3	43
2	44
3	44
3	45
1	46
1	47
3	47
3	48
2	48
1	48
1	49
3	49
2	50
1	50
3	50
3	51
2	51
1	51
2	52
1	53
2	53
2	54
1	55
2	55
2	56
3	56
2	57
1	58
3	58
3	59
3	60
1	60
3	61
2	61
1	61
2	62
1	62
1	63
3	63
3	64
1	64
2	64
1	65
2	65
2	66
1	66
3	66
1	67
1	68
2	69
3	70
1	70
2	70
3	71
2	71
1	72
3	73
2	73
3	74
2	74
3	75
2	75
1	76
3	76
2	76
3	77
1	77
2	78
1	78
2	79
1	79
3	79
3	80
2	80
1	80
3	81
1	81
2	81
3	82
3	83
3	84
1	84
2	84
2	85
3	86
1	87
2	87
2	88
3	88
1	89
3	89
2	89
3	90
2	90
1	90
3	91
2	91
1	91
3	92
1	93
2	93
2	94
1	95
2	95
3	95
1	96
2	96
1	97
2	97
3	97
2	98
2	99
3	99
1	99
3	100
2	100
\.


--
-- Data for Name: bookings_join_customer; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.bookings_join_customer (customer_fk, booking_fk) FROM stdin;
22	1
31	1
41	2
23	3
84	3
72	3
8	4
57	5
26	5
64	5
99	6
58	6
86	7
56	7
27	8
51	8
23	8
59	9
47	10
95	11
51	11
66	12
76	12
8	12
49	13
48	13
38	13
87	14
69	14
63	15
85	16
9	16
45	16
46	17
5	17
66	18
47	18
89	18
68	19
24	20
48	20
84	20
54	21
75	22
72	23
40	24
31	24
88	25
15	25
92	26
26	26
60	26
87	27
14	27
59	28
23	28
18	29
9	30
94	30
94	31
92	31
98	31
69	32
63	32
90	32
83	33
35	33
37	34
15	34
63	35
75	35
4	35
61	36
49	36
41	37
40	37
31	37
70	38
21	38
13	38
76	39
13	39
91	40
17	41
67	41
85	42
65	42
42	42
61	43
76	44
69	44
67	44
25	45
1	45
22	46
85	46
42	46
96	47
64	48
6	48
33	48
6	49
35	49
12	50
87	50
68	50
35	51
27	51
63	51
1	52
82	53
28	54
16	54
80	55
68	56
28	57
59	58
94	58
54	58
97	59
62	59
40	59
53	60
55	60
98	61
5	61
69	61
86	62
17	63
61	63
23	64
20	64
16	64
28	65
11	65
26	66
70	67
36	68
4	69
30	70
4	70
52	71
72	72
92	72
20	73
99	73
36	74
2	75
38	75
95	76
2	76
99	77
92	78
81	78
57	78
54	79
19	79
99	79
76	80
49	81
88	82
94	83
28	83
82	84
100	84
29	84
27	85
77	85
82	85
57	86
84	86
17	87
94	88
51	88
10	89
25	89
95	90
67	90
88	90
65	91
28	91
86	92
38	93
67	93
78	94
40	94
3	95
10	95
29	96
53	96
99	96
25	97
49	97
76	97
58	98
82	98
50	98
82	99
28	100
\.


--
-- Data for Name: bookings_join_rooms; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.bookings_join_rooms (rooms_fk, booking_fk) FROM stdin;
98	1
11	2
79	3
46	3
80	4
56	5
26	5
33	6
67	7
29	7
17	8
93	9
6	9
95	10
99	10
88	11
1	11
9	12
81	12
77	13
3	14
54	14
85	15
89	15
16	16
70	16
86	17
91	18
66	19
28	19
60	20
64	20
79	21
78	21
45	22
39	22
55	23
25	24
2	25
45	26
53	26
88	27
89	28
25	29
51	30
72	31
56	32
97	32
95	33
72	34
69	34
93	35
90	35
79	36
77	37
14	37
66	38
91	38
53	39
13	39
22	40
94	40
86	41
29	41
15	42
19	42
65	43
19	43
18	44
89	44
39	45
59	46
44	47
35	47
49	48
94	49
15	50
49	50
30	51
20	51
79	52
58	52
69	53
11	54
70	54
93	55
49	56
7	56
73	57
37	57
31	58
6	59
91	59
33	60
22	60
78	61
37	61
36	62
23	62
38	63
66	63
99	64
19	64
13	65
5	65
27	66
17	67
39	67
7	68
34	69
78	69
17	70
66	70
62	71
10	71
69	72
64	73
7	73
45	74
58	74
32	75
76	76
68	77
33	77
26	78
90	79
52	80
94	81
79	81
95	82
45	83
63	84
44	85
18	86
3	86
44	87
69	87
36	88
31	88
72	89
58	90
97	91
83	91
98	92
83	92
71	93
94	93
34	94
55	95
96	96
31	96
55	97
50	98
44	98
45	99
16	99
88	100
\.


--
-- Data for Name: customers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.customers (customer_id, name, email, phone_number, birthyear) FROM stdin;
1	Mr. Ethan Luna	powellkristin@yahoo.com	001-200-462-5761x887	1995
2	Shawn Wong	moonjonathon@li.com	+1-737-056-5643	1967
3	Felicia Zimmerman	stephen58@gmail.com	+1-262-642-2482	1999
4	Katie James	kreynolds@yahoo.com	809-724-2697x13342	1990
5	Jerry Hoover	nathan20@snyder.com	+1-149-145-1136x0768	1998
6	Jonathan Mcdonald	mccoyrobert@jackson-khan.com	+1-213-896-6814x370	1953
7	Sean Taylor	smartinez@yahoo.com	858.543.1489	1969
8	Alicia Herrera	oprice@gmail.com	094-089-2596	1999
9	Mr. Anthony Frank	jillianewing@lopez-mcneil.com	+1-652-460-7003	1978
10	Bradley Brown	shawn54@stevenson.com	845.471.3020x273	1964
11	Tracie Kelley	george23@yahoo.com	1620845036	1968
12	Danielle Anthony	yhill@taylor.com	313-248-6630x5713	1991
13	Timothy Escobar	connie25@hotmail.com	(715)374-5214x55188	1979
14	Christopher Sandoval	samuel21@gmail.com	(043)645-7222	1977
15	Travis Edwards	james15@morales-burke.com	(891)413-8057x61006	1950
16	Catherine Baird	johnsoncatherine@gmail.com	486.352.6262x5863	1989
17	Justin Bell	leslietucker@gmail.com	0814320701	1992
18	Chad Howell	john77@robinson.com	949-999-6092x6347	1983
19	Jack Ward	jjones@pierce-ford.biz	+1-043-856-2508x3815	1978
20	Jose Burns	kylealvarez@dorsey.com	+1-168-112-1970	1986
21	Samantha Durham	redwards@morgan-nelson.net	152.427.3071x52094	1977
22	Kaitlyn Ross	laurenbarajas@yahoo.com	527-477-7018	1992
23	Dr. Kathleen Krause DDS	wnguyen@alvarez-bowman.net	(724)239-6546x26114	1954
24	Laura Warren	brandy20@gmail.com	+1-224-594-0251x21090	1959
25	Amber Phillips	mfigueroa@robinson.com	+1-179-246-8224x7648	1984
26	Lee Ayers	thompsontodd@johnson.info	(390)437-6981x13186	1969
27	Vanessa Cook	brendadavis@lara.com	435.177.3562x71024	1988
28	Jason Parker	phamjonathan@yahoo.com	215.279.3182x0568	1968
29	April Adams	vwood@brown-murphy.com	(498)455-8904x5501	1989
30	Kyle Welch	george10@kelly.com	(105)152-3204x6995	1957
31	Christopher Young	travis64@hotmail.com	001-607-754-9156x73534	1959
32	Kristina Melton	kdixon@yahoo.com	285-322-9040	1982
33	Jacob Ramirez	tpena@hotmail.com	091-652-6262	1973
34	Jason Gilbert	chadrichardson@gmail.com	(728)118-9771x0438	1967
35	Kathryn Bruce	nguyenjennifer@gmail.com	(165)331-5739	1950
36	Kimberly Williams	carterrobert@bradley-briggs.com	(937)193-7339x92746	1982
37	Michael Johnson	xbell@warren-gonzales.com	001-232-356-5106x112	1977
38	Daisy Morgan	jackgarza@johnson.net	795-459-5365	1961
39	Michael Turner	peter29@gmail.com	439-642-0648x05472	2000
40	Meghan Newman	kendraschaefer@yahoo.com	1475271556	1984
41	Ashley Bernard	xmatthews@hotmail.com	+1-582-555-3439x8216	1959
42	Leslie Marks	sherry67@moran.info	001-590-532-0819x30493	2005
43	Christina Bailey	davisjohn@gmail.com	2888919926	1951
44	Gregory Gomez	matthewmckee@turner-perry.org	(906)895-8760x4815	1992
45	Theresa Sanchez	larry89@pearson.com	001-607-549-2937	1987
46	Brian Boyle	smithmary@hotmail.com	657.507.4563x74455	1973
47	Emily Brown	montgomeryedward@gmail.com	(121)784-0997x881	1974
48	Laura Clark	ucalderon@hotmail.com	(295)741-3490x616	1995
49	Charlotte Randall	christinevillegas@gmail.com	(318)016-6583x642	1973
50	Pamela Romero	lee48@gmail.com	(187)268-3557	1979
51	Michael Jones	patriciaherman@yahoo.com	939.482.1784x20288	1998
52	Phillip Hernandez	apetty@gmail.com	+1-067-444-0714x7416	1950
53	Katherine Williamson	asullivan@parker-harrison.info	(869)396-9932x456	1980
54	Daniel Jones	douglaschristine@yahoo.com	(401)381-9711x2910	1964
55	Jimmy Massey	carmen07@walters.info	506.787.3405x706	1981
56	Daniel Wood	vwhite@hotmail.com	(985)970-1743x859	1952
57	Anthony Morton	jeffreyjacobs@walker-ferguson.com	599.878.7563	1987
58	Brian Chambers	xjames@hatfield.net	966-688-2835	1976
59	Steven Weber	zharris@mckinney-williams.com	3493954412	1957
60	Stanley Garcia	qanderson@yahoo.com	485-205-1678	1989
61	James Willis	johnlawson@hotmail.com	160-818-8169	1982
62	Robert Black	emiller@hotmail.com	614-240-5026	2002
63	Jennifer Liu	wagnerdebra@hotmail.com	001-474-376-3539x129	1957
64	Timothy Garcia	vmarshall@cantrell.com	(093)467-7695x9840	1997
65	Zachary Ferguson	pjohnson@hotmail.com	584-002-1631	1955
66	Julie Cohen	gregorypamela@ortiz.com	+1-329-935-0473x3952	1997
67	Steven Robertson	jessica08@yahoo.com	(484)300-8911x223	1988
68	Nicole Williams	bryanlewis@hotmail.com	356-907-9517	1985
69	Antonio Smith	christianmoody@marsh-kelly.biz	(481)452-3108	2002
70	Jennifer Roberson	robin83@bradshaw.com	(681)404-1026	1960
71	Justin Villa	melissa53@martinez.net	818.498.5952	1995
72	Nicholas Wright	kelly62@robinson.org	087-174-1852x911	1956
73	Michelle Hines MD	anne90@george.com	+1-122-711-2268x912	1988
74	Ryan Barnes	williamsmatthew@gmail.com	001-189-335-5386x05226	1950
75	David Cline	walkerian@pitts.com	(045)729-9015	2005
76	Paul Lawrence	johnsonchristopher@hotmail.com	041.086.4801	1992
77	Maurice Carpenter	joshua51@chavez-collins.com	(714)342-8270	1998
78	Michael Weiss	hernandezcaleb@montoya.com	(907)773-6732	1987
79	Adam Mitchell	emily74@yahoo.com	(999)174-9153x433	1958
80	David Gomez	gutierrezerik@silva.com	001-139-839-7358	1960
81	Sarah Buckley	andersonerica@hotmail.com	494-394-3194	1992
82	Margaret Riddle	carlos86@gonzales-brock.com	+1-034-352-4090x37770	1955
83	Jessica Davis	umartinez@walker-johnson.com	887-351-1386	1982
84	Mary Page	zjames@gmail.com	001-746-682-1374x491	1959
85	Sabrina Burnett	gomezstephanie@white-bryant.com	181.522.6582x740	2002
86	Victoria Hernandez	vreyes@hotmail.com	+1-010-001-8060x7722	1974
87	Mrs. Autumn Bautista MD	shannondarrell@richards.com	001-893-535-5678x816	1985
88	Amber Howard	ujames@hotmail.com	+1-806-679-8570	1977
89	Timothy Johnson MD	jsmith@mcguire.net	409.444.9949x014	1999
90	Michael Miller	susanhogan@carr.biz	+1-785-898-6534x967	1951
91	James Wheeler	yolanda54@fitzgerald.biz	001-370-031-7612x918	1955
92	Ryan Jones	timothy59@gmail.com	(333)579-1603	1977
93	Todd Mcdowell	moorecheryl@hotmail.com	+1-345-507-5076x593	1955
94	Catherine Williams	inguyen@gmail.com	704.354.0903	1961
95	Ryan Moore	lynn75@burns.net	(755)778-1243x3128	1956
96	Albert Patrick	daniellee@hotmail.com	(015)369-6462x823	1950
97	Zachary Johnson	wrightrachel@hotmail.com	+1-711-317-7117x60628	1981
98	Jeffrey Chavez	jonesabigail@wilson.com	795.755.0027x5972	1995
99	Michael Lopez DVM	ericksondaniel@scott.biz	552-809-3366	1972
100	Rachel Smith	rramirez@bailey.com	001-069-612-3161x939	1994
\.


--
-- Data for Name: hotel_features; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.hotel_features (hotel_features_id, feature) FROM stdin;
1	pool
2	kids club
3	restaurant
4	evening entertainment
\.


--
-- Data for Name: hotels; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.hotels (hotel_id, street_name, postal_code, city, region, country, distance_to_ski_slope, distance_to_town_center, rating, hotel_name, distance_to_linus_house) FROM stdin;
2	Ski Jump Road	6020	Innsbruck	Tyrol	Austria	0.48	0.51	4	Ski Haven 2	934
4	Ice Cap Street	6020	Innsbruck	Tyrol	Austria	1.71	4.87	3	Frosty Inn 4	934
5	Glacier Avenue	6020	Innsbruck	Tyrol	Austria	0.61	1.16	4	Alpine Lodge 5	934
1	Alpine Way	6020	Innsbruck	Tyrol	Austria	0.38	4.22	3	Alpine Lodge 1	934
3	Alpine Way	6020	Innsbruck	Tyrol	Austria	0.11	0.84	4	Ski Haven 3	934
7	Summit Street	74400	Chamonix	Auvergne-Rhône-Alpes	France	0.42	4.83	3	Glacier Retreat 2	1158
8	Summit Street	74400	Chamonix	Auvergne-Rhône-Alpes	France	1.24	2.48	3	Snow Peak 3	1158
9	Snowflake Lane	74400	Chamonix	Auvergne-Rhône-Alpes	France	2.32	1.67	3	Alpine Lodge 4	1158
6	Powder Drive	74400	Chamonix	Auvergne-Rhône-Alpes	France	2.97	2.53	4	Alpine Lodge 1	1158
10	Glacier Avenue	74400	Chamonix	Auvergne-Rhône-Alpes	France	1.49	2.98	3	Ski Haven 5	1158
17	Snowflake Lane	81611	Aspen	Colorado	USA	2.05	2.23	4	Frosty Inn 2	7958
13	Glacier Avenue	3920	Zermatt	Valais	Switzerland	2.03	3.92	4	Frosty Inn 3	1127
11	Glacier Avenue	3920	Zermatt	Valais	Switzerland	1.35	1.08	4	Snow Peak 1	1127
19	Alpine Way	81611	Aspen	Colorado	USA	2.14	2.37	3	Ski Haven 4	7958
20	Glacier Avenue	81611	Aspen	Colorado	USA	2.66	2.48	4	Alpine Lodge 5	7958
15	Avalanche Road	3920	Zermatt	Valais	Switzerland	2.56	2.27	3	Glacier Retreat 5	1127
16	Avalanche Road	81611	Aspen	Colorado	USA	1.88	3.61	4	Snow Peak 1	7958
14	Alpine Way	3920	Zermatt	Valais	Switzerland	2.89	3.61	4	Frosty Inn 4	1127
18	Glacier Avenue	81611	Aspen	Colorado	USA	2.08	0.69	4	Alpine Lodge 3	7958
12	Mountain View Drive	3920	Zermatt	Valais	Switzerland	1.71	2.64	4	Ski Haven 2	1127
22	Ice Cap Street	399-9301	Hakuba	Nagano	Japan	2.88	1.63	4	Ski Haven 2	8519
24	Powder Drive	399-9301	Hakuba	Nagano	Japan	1.54	4.27	3	Ski Haven 4	8519
25	Alpine Way	399-9301	Hakuba	Nagano	Japan	0.12	1.25	4	Glacier Retreat 5	8519
23	Summit Street	399-9301	Hakuba	Nagano	Japan	1.29	2.52	3	Frosty Inn 3	8519
21	Ski Jump Road	399-9301	Hakuba	Nagano	Japan	1.08	1.46	3	Glacier Retreat 1	8519
\.


--
-- Data for Name: hotels_join_features; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.hotels_join_features (feature_fk, hotel_fk) FROM stdin;
2	1
3	1
4	1
1	1
2	2
3	2
4	3
1	3
3	3
2	3
2	4
4	4
3	5
2	5
4	5
1	5
3	6
4	6
1	6
2	6
1	7
3	7
2	7
4	7
1	8
4	8
2	9
2	10
1	10
2	11
1	11
2	12
2	13
1	13
4	13
1	14
4	14
4	15
1	15
2	15
3	15
4	16
1	16
2	17
3	17
3	18
1	18
4	18
4	19
3	19
2	19
4	20
1	20
3	20
2	20
1	21
4	21
2	22
3	22
2	23
1	23
4	23
4	24
1	24
2	25
4	25
1	25
\.


--
-- Data for Name: rooms; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.rooms (room_id, size, price, hotel_fk, room_number) FROM stdin;
80	2 beds	482	7	448
49	2 beds	211	15	332
88	2 beds	246	20	483
32	2 beds	475	25	375
57	2 beds	191	13	126
40	2 beds	173	25	15
1	2 beds	426	6	53
83	2 beds	362	10	201
91	2 beds	141	14	412
21	2 beds	406	18	338
19	2 beds	184	19	150
25	2 beds	429	12	182
45	2 beds	142	23	94
96	2 beds	340	9	270
74	2 beds	480	22	357
4	2 beds	476	1	452
2	2 beds	490	10	181
7	2 beds	497	1	256
3	2 beds	367	24	295
20	2 beds	144	18	181
77	2 beds	443	21	27
51	2 beds	68	10	398
42	2 beds	362	15	19
65	2 beds	151	12	252
24	2 beds	388	9	355
34	2 beds	395	18	139
37	2 beds	240	8	475
85	2 beds	79	7	195
27	2 beds	376	14	44
26	2 beds	214	15	160
47	2 beds	90	10	486
41	2 beds	88	1	288
52	2 beds	381	9	306
89	2 beds	51	6	278
54	2 beds	348	8	226
72	2 beds	489	9	403
63	2 beds	449	20	305
10	2 beds	204	19	79
69	2 beds	217	19	386
71	2 beds	163	25	342
67	2 beds	318	14	203
66	2 beds	482	19	399
59	2 beds	181	11	9
58	2 beds	112	8	105
70	2 beds	459	22	236
12	3 beds	134	14	460
100	3 beds	454	8	232
36	3 beds	418	19	332
94	3 beds	178	20	435
29	3 beds	421	25	1
93	3 beds	85	15	213
84	3 beds	268	9	45
16	3 beds	63	21	183
64	3 beds	87	11	236
75	3 beds	102	22	335
15	3 beds	293	17	49
13	3 beds	254	13	425
11	3 beds	409	8	86
44	3 beds	414	12	257
99	3 beds	181	7	117
53	3 beds	445	24	189
79	3 beds	296	19	370
9	3 beds	482	2	69
61	3 beds	59	18	370
60	3 beds	154	7	99
5	3 beds	168	5	467
81	1 bed	430	12	416
38	1 bed	425	20	468
31	1 bed	336	9	118
50	1 bed	136	6	152
73	1 bed	68	23	450
62	1 bed	378	25	230
35	1 bed	206	22	124
97	1 bed	367	3	34
68	1 bed	273	21	421
18	1 bed	112	22	493
92	1 bed	171	8	43
22	1 bed	369	11	399
23	1 bed	283	20	265
76	1 bed	247	23	224
78	1 bed	83	24	397
98	1 bed	475	23	292
95	1 bed	116	22	247
48	1 bed	367	2	428
17	1 bed	256	25	412
56	1 bed	250	17	13
82	1 bed	68	3	265
55	1 bed	158	6	411
6	1 bed	303	16	116
33	1 bed	113	11	445
43	1 bed	187	18	164
46	1 bed	74	9	176
8	1 bed	289	24	89
39	1 bed	78	11	13
28	1 bed	274	14	307
30	1 bed	405	2	407
86	1 bed	243	13	188
87	1 bed	130	3	442
90	1 bed	325	2	395
14	1 bed	170	1	188
\.


--
-- Name: addons_addons_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.addons_addons_id_seq', 4, true);


--
-- Name: admins_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.admins_id_seq', 2, true);


--
-- Name: bookings_bookings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.bookings_bookings_id_seq', 66, true);


--
-- Name: customers_customer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.customers_customer_id_seq', 204, true);


--
-- Name: hotel_features_hotel_features_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.hotel_features_hotel_features_id_seq', 4, true);


--
-- Name: hotels_address_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.hotels_address_id_seq', 105, true);


--
-- Name: rooms_room_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.rooms_room_id_seq', 250, true);


--
-- Name: addons_join_hotels addons_join_hotels_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.addons_join_hotels
    ADD CONSTRAINT addons_join_hotels_pk PRIMARY KEY (addon_fk, hotel_fk);


--
-- Name: addons addons_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.addons
    ADD CONSTRAINT addons_pk PRIMARY KEY (addons_id);


--
-- Name: bookings_join_addons bookings_join_addons_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookings_join_addons
    ADD CONSTRAINT bookings_join_addons_pk PRIMARY KEY (addon_fk, booking_fk);


--
-- Name: bookings_join_customer bookings_join_customer_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookings_join_customer
    ADD CONSTRAINT bookings_join_customer_pk PRIMARY KEY (booking_fk, customer_fk);


--
-- Name: bookings_join_rooms bookings_join_rooms_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookings_join_rooms
    ADD CONSTRAINT bookings_join_rooms_pk PRIMARY KEY (booking_fk, rooms_fk);


--
-- Name: bookings bookings_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookings
    ADD CONSTRAINT bookings_pk PRIMARY KEY (bookings_id);


--
-- Name: customers customers_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customers
    ADD CONSTRAINT customers_pk PRIMARY KEY (customer_id);


--
-- Name: hotel_features hotel_features_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.hotel_features
    ADD CONSTRAINT hotel_features_pk PRIMARY KEY (hotel_features_id);


--
-- Name: hotels_join_features hotels_join_features_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.hotels_join_features
    ADD CONSTRAINT hotels_join_features_pk PRIMARY KEY (feature_fk, hotel_fk);


--
-- Name: hotels hotels_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.hotels
    ADD CONSTRAINT hotels_pk PRIMARY KEY (hotel_id);


--
-- Name: rooms rooms_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rooms
    ADD CONSTRAINT rooms_pk PRIMARY KEY (room_id);


--
-- Name: addons_join_hotels addons_join_hotels_addons_addons_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.addons_join_hotels
    ADD CONSTRAINT addons_join_hotels_addons_addons_id_fk FOREIGN KEY (addon_fk) REFERENCES public.addons(addons_id);


--
-- Name: addons_join_hotels addons_join_hotels_hotels_hotel_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.addons_join_hotels
    ADD CONSTRAINT addons_join_hotels_hotels_hotel_id_fk FOREIGN KEY (hotel_fk) REFERENCES public.hotels(hotel_id);


--
-- Name: bookings_join_addons bookings_join_addons_addons_addons_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookings_join_addons
    ADD CONSTRAINT bookings_join_addons_addons_addons_id_fk FOREIGN KEY (addon_fk) REFERENCES public.addons(addons_id);


--
-- Name: bookings_join_addons bookings_join_addons_bookings_bookings_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookings_join_addons
    ADD CONSTRAINT bookings_join_addons_bookings_bookings_id_fk FOREIGN KEY (booking_fk) REFERENCES public.bookings(bookings_id);


--
-- Name: bookings_join_customer bookings_join_customer_bookings_bookings_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookings_join_customer
    ADD CONSTRAINT bookings_join_customer_bookings_bookings_id_fk FOREIGN KEY (booking_fk) REFERENCES public.bookings(bookings_id);


--
-- Name: bookings_join_customer bookings_join_customer_customers_customer_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookings_join_customer
    ADD CONSTRAINT bookings_join_customer_customers_customer_id_fk FOREIGN KEY (customer_fk) REFERENCES public.customers(customer_id);


--
-- Name: bookings_join_rooms bookings_join_rooms_bookings_bookings_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookings_join_rooms
    ADD CONSTRAINT bookings_join_rooms_bookings_bookings_id_fk FOREIGN KEY (booking_fk) REFERENCES public.bookings(bookings_id);


--
-- Name: bookings_join_rooms bookings_join_rooms_rooms_room_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookings_join_rooms
    ADD CONSTRAINT bookings_join_rooms_rooms_room_id_fk FOREIGN KEY (rooms_fk) REFERENCES public.rooms(room_id);


--
-- Name: hotels_join_features hotels_join_features_hotel_features_hotel_features_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.hotels_join_features
    ADD CONSTRAINT hotels_join_features_hotel_features_hotel_features_id_fk FOREIGN KEY (feature_fk) REFERENCES public.hotel_features(hotel_features_id);


--
-- Name: hotels_join_features hotels_join_features_hotels_hotel_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.hotels_join_features
    ADD CONSTRAINT hotels_join_features_hotels_hotel_id_fk FOREIGN KEY (hotel_fk) REFERENCES public.hotels(hotel_id);


--
-- Name: rooms rooms_hotels_hotel_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rooms
    ADD CONSTRAINT rooms_hotels_hotel_id_fk FOREIGN KEY (hotel_fk) REFERENCES public.hotels(hotel_id);


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE USAGE ON SCHEMA public FROM PUBLIC;


--
-- PostgreSQL database dump complete
--

